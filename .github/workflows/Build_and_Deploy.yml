name: Build_and_Deploy

on:
  push:
    branches:
      - Build_and_Deploy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up the SSH key for connecting to the Ansible controller
      - name: Set up SSH key
        run: |
          echo "${{ secrets.ANSIBLE_SSH_CONVERTED }}" > private_key
          chmod 600 private_key

      - name: Set up SSH key2
        run: |
          echo "${{ secrets.ANSIBLE_SSH_CONVERTED2 }}" > private_key2
          chmod 600 private_key2

      # Test the SSH connection to the Ansible controller
      - name: Test SSH connection
        run: |
          ssh -o StrictHostKeyChecking=accept-new -i ./private_key ${{ secrets.AZURE_USER_ID }}@${{ secrets.Ansible_Controller_IP }} "echo SSH connection successful"

      # Deploy VM on Azure via Ansible controller
      - name: Deploy VM on Azure
        run: |
          ssh -o StrictHostKeyChecking=accept-new -i ./private_key ${{ secrets.AZURE_USER_ID }}@${{ secrets.Ansible_Controller_IP }} << 'EOF'
            az login --service-principal -u ${{ secrets.CLIENT_ID }} -p ${{ secrets.CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}
            az vm create --resource-group B2C6A --name backendlasse1 \
              --image "Canonical:0001-com-ubuntu-minimal-jammy:minimal-22_04-lts-gen2:latest" \
              --admin-username ${{ secrets.AZURE_USER_ID }} --assign-identity --generate-ssh-keys \
              --public-ip-sku Standard --location westeurope --size Standard_B1s \
              --storage-sku Standard_LRS --nic-delete-option delete --os-disk-delete-option delete
            az vm open-port --resource-group B2C6A --name backendlasse1 --port 5000 --priority 1500
            sleep 120
            vm_ip=$(az vm list-ip-addresses --resource-group B2C6A --name backendlasse1 --query "[].virtualMachine.network.publicIpAddresses[].ipAddress" -o tsv)
            echo $vm_ip > vm_ip.txt
          EOF

      # Retrieve the VM IP address
      - name: Retrieve VM IP
        run: |
          scp -o StrictHostKeyChecking=accept-new -i ./private_key ${{ secrets.AZURE_USER_ID }}@${{ secrets.Ansible_Controller_IP }}:vm_ip.txt .
          vm_ip=$(cat vm_ip.txt)
          echo "VM_IP=${vm_ip}" >> $GITHUB_ENV

      # Configure the new VM
      - name: Configure Backend on New VM
        run: |
          ssh -o StrictHostKeyChecking=accept-new -i ./private_key2 ${{ secrets.AZURE_USER_ID }}@${{ env.VM_IP }} << 'EOF'
            sudo apt-get update
            sudo apt-get upgrade -y
            sudo apt-get install -y git python3-pip nano pkg-config libmysqlclient-dev
            sudo pip3 install mysqlclient==2.1.1 Flask==2.2.3 Flask-MySQLdb==1.0.1 Flask-CORS==4.0.1 \
              fpdf==1.7.2 python-dotenv==1.0.1 pytest==8.2.2 pytest-mock==3.14.0 Flask-Mail==0.10.0 \
              itsdangerous==2.2.0 imgurpython==1.1.7 reportlab==4.2.2 Werkzeug==2.2.2 bcrypt==4.1.3
            git clone https://github.com/ZuydUniversity/B2C6_B2A_Backend.git /home/${{ secrets.AZURE_USER_ID }}/B2C6_B2A_Backend
            cat <<EOL > /home/${{ secrets.AZURE_USER_ID }}/B2C6_B2A_Backend/.env
            MYSQL_USER=${{ secrets.MYSQL_USER }}
            MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
            MYSQL_DB=${{ secrets.MYSQL_DB }}
            MYSQL_HOST=${{ secrets.MYSQL_HOST }}
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
            imgur_client_id=${{ secrets.IMGUR_CLIENT_ID }}
            imgur_client_secret=${{ secrets.IMGUR_CLIENT_SECRET }}
            EOL
            sed -i "s/app.run(debug=True)/app.run(host='0.0.0.0', port=5000, debug=True)/" /home/${{ secrets.AZURE_USER_ID }}/B2C6_B2A_Backend/Backend_B2A.py
            echo 'export PATH=\$PATH:/home/${{ secrets.AZURE_USER_ID }}/.local/bin' >> /home/${{ secrets.AZURE_USER_ID }}/.bashrc
            source /home/${{ secrets.AZURE_USER_ID }}/.bashrc
          EOF